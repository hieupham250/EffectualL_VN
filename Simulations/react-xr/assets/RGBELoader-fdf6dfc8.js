import{b as Y,H as b,F as I,e as B,L as V}from"./XR-3a18f114.js";class X extends Y{constructor(m){super(m),this.type=b}parse(m){const l=function(r,a){switch(r){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(a||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(a||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(a||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(a||""))}},N=`
`,D=function(r,a,t){a=a||1024;let s=r.pos,i=-1,e=0,_="",n=String.fromCharCode.apply(null,new Uint16Array(r.subarray(s,s+128)));for(;0>(i=n.indexOf(N))&&e<a&&s<r.byteLength;)_+=n,e+=n.length,s+=128,n+=String.fromCharCode.apply(null,new Uint16Array(r.subarray(s,s+128)));return-1<i?(t!==!1&&(r.pos+=e+i+1),_+n.slice(0,i)):!1},u=function(r){const a=/^#\?(\S+)/,t=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,o=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*FORMAT=(\S+)\s*$/,i=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,e={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let _,n;for((r.pos>=r.byteLength||!(_=D(r)))&&l(1,"no header found"),(n=_.match(a))||l(3,"bad initial token"),e.valid|=1,e.programtype=n[1],e.string+=_+`
`;_=D(r),_!==!1;){if(e.string+=_+`
`,_.charAt(0)==="#"){e.comments+=_+`
`;continue}if((n=_.match(t))&&(e.gamma=parseFloat(n[1])),(n=_.match(o))&&(e.exposure=parseFloat(n[1])),(n=_.match(s))&&(e.valid|=2,e.format=n[1]),(n=_.match(i))&&(e.valid|=4,e.height=parseInt(n[1],10),e.width=parseInt(n[2],10)),e.valid&2&&e.valid&4)break}return e.valid&2||l(3,"missing format specifier"),e.valid&4||l(3,"missing image size specifier"),e},v=function(r,a,t){const o=a;if(o<8||o>32767||r[0]!==2||r[1]!==2||r[2]&128)return new Uint8Array(r);o!==(r[2]<<8|r[3])&&l(3,"wrong scanline width");const s=new Uint8Array(4*a*t);s.length||l(4,"unable to allocate buffer space");let i=0,e=0;const _=4*o,n=new Uint8Array(4),E=new Uint8Array(_);let f=t;for(;f>0&&e<r.byteLength;){e+4>r.byteLength&&l(1),n[0]=r[e++],n[1]=r[e++],n[2]=r[e++],n[3]=r[e++],(n[0]!=2||n[1]!=2||(n[2]<<8|n[3])!=o)&&l(3,"bad rgbe scanline format");let R=0,c;for(;R<_&&e<r.byteLength;){c=r[e++];const h=c>128;if(h&&(c-=128),(c===0||R+c>_)&&l(3,"bad scanline data"),h){const g=r[e++];for(let U=0;U<c;U++)E[R++]=g}else E.set(r.subarray(e,e+c),R),R+=c,e+=c}const C=o;for(let h=0;h<C;h++){let g=0;s[i]=E[h+g],g+=o,s[i+1]=E[h+g],g+=o,s[i+2]=E[h+g],g+=o,s[i+3]=E[h+g],i+=4}f--}return s},P=function(r,a,t,o){const s=r[a+3],i=Math.pow(2,s-128)/255;t[o+0]=r[a+0]*i,t[o+1]=r[a+1]*i,t[o+2]=r[a+2]*i,t[o+3]=1},z=function(r,a,t,o){const s=r[a+3],i=Math.pow(2,s-128)/255;t[o+0]=B.toHalfFloat(Math.min(r[a+0]*i,65504)),t[o+1]=B.toHalfFloat(Math.min(r[a+1]*i,65504)),t[o+2]=B.toHalfFloat(Math.min(r[a+2]*i,65504)),t[o+3]=B.toHalfFloat(1)},w=new Uint8Array(m);w.pos=0;const d=u(w),k=d.width,H=d.height,y=v(w.subarray(w.pos),k,H);let L,F,p;switch(this.type){case I:p=y.length/4;const r=new Float32Array(p*4);for(let t=0;t<p;t++)P(y,t*4,r,t*4);L=r,F=I;break;case b:p=y.length/4;const a=new Uint16Array(p*4);for(let t=0;t<p;t++)z(y,t*4,a,t*4);L=a,F=b;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:k,height:H,data:L,header:d.string,gamma:d.gamma,exposure:d.exposure,type:F}}setDataType(m){return this.type=m,this}load(m,G,A,M){function S(l,T){switch(l.type){case I:case b:"colorSpace"in l?l.colorSpace="srgb-linear":l.encoding=3e3,l.minFilter=V,l.magFilter=V,l.generateMipmaps=!1,l.flipY=!0;break}G&&G(l,T)}return super.load(m,S,A,M)}}export{X as R};
